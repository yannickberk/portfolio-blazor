name: Cleanup Orphaned PR Preview Environments

on:
  # Run daily at 2 AM UTC to clean up orphaned environments
  schedule:
    - cron: '0 2 * * *'
  # Allow manual triggering
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  cleanup-orphaned-environments:
    name: Cleanup Orphaned PR Preview Environments
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Orphaned PR Preview Environments
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            
            // Get all environments
            const { data: environments } = await github.rest.repos.getAllEnvironments({
              owner,
              repo
            });
            
            console.log(`Found ${environments.total_count} environments`);
            
            // Get all open PRs
            const openPRs = await github.paginate(
              github.rest.pulls.list,
              {
                owner,
                repo,
                state: 'open',
                per_page: 100
              }
            );
            
            // Build a set of expected PR environment names
            const expectedPREnvironmentNames = new Set(openPRs.map(pr => `pr-${pr.head.ref}`));
            console.log(`Found ${expectedPREnvironmentNames.size} open PRs`);
            
            let cleanedCount = 0;
            
            // Check each environment that looks like a PR preview
            for (const environment of environments.environments) {
              if (environment.name.startsWith('pr-')) {
                // If this environment is not associated with any open PR, delete it
                if (!expectedPREnvironmentNames.has(environment.name)) {
                  console.log(`Deleting orphaned environment: ${environment.name}`);
                  
                  try {
                    await github.rest.repos.deleteAnEnvironment({
                      owner,
                      repo,
                      environment_name: environment.name
                    });
                    cleanedCount++;
                    console.log(`Successfully deleted environment: ${environment.name}`);
                  } catch (error) {
                    console.error(`Error deleting environment ${environment.name}: ${error.message}`);
                  }
                } else {
                  console.log(`Keeping environment ${environment.name} - PR is still open`);
                }
              }
            }
            
            console.log(`Cleanup complete. Deleted ${cleanedCount} orphaned environment(s)`);
