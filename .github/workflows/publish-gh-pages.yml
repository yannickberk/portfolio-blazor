name: Publish Blazor App to GitHub Pages

on: [ workflow_dispatch, pull_request ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_test_artifact:
    name: Build App

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x'

    - name: Restore NuGet packages
      shell: bash
      run: |
        dotnet restore .

    - name: Build solution
      shell: bash
      run: |
        dotnet build .

    - name: Test solution
      shell: bash
      run: |
        dotnet test . -c Release

    - name: Publish main branch artifact to root
      shell: bash
      run: |
        # Always build main branch output to root
        git fetch origin main:main
        git checkout main
        dotnet publish src/BlazorApp -c Release -o published

    - name: Publish PR branch artifact to subfolder
      shell: bash
      if: env.GITHUB_HEAD_REF != ''
      env:
        GITHUB_HEAD_REF: ${{ github.head_ref }}
      run: |
        # Fetch PR branch from origin before checkout
        git fetch origin "$GITHUB_HEAD_REF:$GITHUB_HEAD_REF"
        git checkout "$GITHUB_HEAD_REF"
        pr_folder="published/wwwroot/${GITHUB_HEAD_REF}"
        dotnet publish src/BlazorApp -c Release -o "$pr_folder"

    - name: Upload artifact for web
      uses: actions/upload-pages-artifact@v4
      with:
        path: published/wwwroot


  deploy:
    name: Deploy App to GitHub Pages
    if: github.ref == 'refs/heads/main'
    needs:
      - build_test_artifact

    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  pr-preview:
    name: Deploy PR Preview to GitHub Pages
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')
    needs:
      - build_test_artifact
    runs-on: ubuntu-latest
    environment:
      name: pr-${{ github.head_ref }}
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy PR Preview to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  pr-preview-cleanup:
    name: Remove PR Preview Deployment
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Remove PR Preview Deployment
        uses: actions/deploy-pages@v4
        with:
          deployment: delete
          environment: pr-${{ github.head_ref }}
