<section class="light" id="about">
    @if (hero is not null)
    {
        <img class="background" src="@(hero.Src)" alt="@(hero.Alt)" />
    }
    <h2>About Myself</h2>
    <div style="background-color: white; width: 50%; padding: 4rem; margin: 3rem auto; text-align: center;">
    @if (aboutme is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <p class="large">@aboutme.Description</p>
        <hr />
        <ul style="text-align: left; columns: 2; font-size: 1.25rem; margin: 2rem 3rem; gap: 3rem;">
        @foreach (var skill in aboutme.Skills)
        {
            <li key="@skill">@skill</li>
        }
        </ul>
        <hr />
        <p style="padding: 1rem 3rem 0;">@aboutme.DetailOrQuote</p>
        @if (aboutme.CurrentlyLearning is not null && aboutme.CurrentlyLearning.Any())
        {
            <hr />
            <div style="padding: 1rem 3rem 0; text-align: left;">
                <h3>Currently learning</h3>
                <ul style="font-size: 1rem; margin-left: 1rem;">
                @foreach (var item in aboutme.CurrentlyLearning)
                {
                    <li key="@item">@item</li>
                }
                </ul>
            </div>
        }
    }
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private AboutMe? aboutme;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        aboutme = await Http.GetFromJsonAsync<AboutMe>("sample-data/aboutme.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "about");

    }
}
