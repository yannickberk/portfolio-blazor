@using BlazorApp.Models
@using BlazorApp.Services
@inject IAboutMeService AboutMeService
@inject IHeroImageService HeroImageService
@inject ILogger<About> Logger

<section class="light" id="about">
    @if (hero is not null)
    {
        <img class="background" src="@(hero.Src)" alt="@(hero.Alt)" />
    }
    <h2>About Myself</h2>
    <div class="about-content">
    @if (aboutme is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <p class="large">@aboutme.Description</p>
        @if (aboutme.Skills.Count > 0)
        {
            <hr />
            <ul class="skills-list">
            @foreach (var skill in aboutme.Skills)
            {
                <li key="@skill">@skill</li>
            }
            </ul>
        }
        <hr />
        <p class="quote">@aboutme.DetailOrQuote</p>
        @if (aboutme.CurrentlyLearning.Count > 0)
        {
            <hr />
            <div class="currently-learning">
                <h3>Currently learning</h3>
                <ul>
                @foreach (var item in aboutme.CurrentlyLearning)
                {
                    <li key="@item">@item</li>
                }
                </ul>
            </div>
        }
    }
    </div>
</section>

@code {
    private AboutMe? aboutme;
    private HeroImage? hero;

    /// <summary>
    /// Initializes the component by loading about me information and hero image data.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Logger.LogDebug("Initializing About component");

            // Load data in parallel for better performance
            var aboutMeTask = AboutMeService.GetAboutMeAsync();
            var heroTask = HeroImageService.GetHeroAsync(img => img.Name == "about");

            await Task.WhenAll(aboutMeTask, heroTask).ConfigureAwait(false);

            aboutme = await aboutMeTask;
            hero = await heroTask;

            Logger.LogDebug("About component initialization completed successfully");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error occurred while initializing About component");
            
            // Ensure UI shows loading state on error
            aboutme = null;
            hero = null;
        }
    }
}
