@using BlazorApp.Models
@using BlazorApp.Services
@inject ISitePropertiesService SitePropertiesService
@inject IHeroImageService HeroImageService
@inject ILogger<Home> Logger

<section class="dark" id="home">
    @if (hero is not null)
    {
        <img class="background" src="@(hero.Src)" alt="@(hero.Alt)" />
    }
    <div class="hero-text">
    @if (property is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h1>@property.Name</h1>
        <h2>@property.Title</h2>
    }
    </div>
    <div class="scroll-arrow-container">
        <a href="#about" class="scroll-arrow">
            <img src="images/down-arrow.svg" class="down-arrow" alt="scroll down" />
        </a>
    </div>
</section>

@code {
    private SiteProperties? property;
    private HeroImage? hero;

    /// <summary>
    /// Initializes the component by loading site properties and hero image data.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Logger.LogDebug("Initializing Home component");

            // Load data in parallel for better performance
            var propertyTask = SitePropertiesService.GetSitePropertiesAsync();
            var heroTask = HeroImageService.GetHeroAsync(img => img.Name == "home");

            await Task.WhenAll(propertyTask, heroTask).ConfigureAwait(false);

            property = await propertyTask;
            hero = await heroTask;

            Logger.LogDebug("Home component initialization completed successfully");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error occurred while initializing Home component");
            
            // Ensure UI shows loading state on error
            property = null;
            hero = null;
        }
    }
}
